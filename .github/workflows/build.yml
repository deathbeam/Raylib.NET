name: Build
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  bindgen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build
        run: dotnet build -c Release src/Raylib.NET.Bindgen

  natives-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup Environment
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt-get install \
              gcc-multilib \
              libasound2-dev \
              libx11-dev \
              libxrandr-dev \
              libxi-dev \
              libgl1-mesa-dev \
              libglu1-mesa-dev \
              libxcursor-dev \
              libxinerama-dev \
              libwayland-dev \
              libxkbcommon-dev

      - name: Build Natives
        run: dotnet build -c Release -r linux-x64
        working-directory: src/Raylib.NET.Native

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: natives-linux-x64
          path: src/Raylib.NET.Native/bin/Release/native/linux-x64/*
          if-no-files-found: error

  natives-osx:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build Natives
        run: dotnet build -c Release -r osx-x64
        working-directory: src/Raylib.NET.Native

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: natives-osx-x64
          path: src/Raylib.NET.Native/bin/Release/native/osx-x64/*
          if-no-files-found: error

  natives-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build Natives
        run: dotnet build -c Release -r win-x64
        working-directory: src/Raylib.NET.Native

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: natives-win-x64
          path: src/Raylib.NET.Native/bin/Release/native/win-x64/*
          if-no-files-found: error

  build-and-upload:
    runs-on: ubuntu-latest
    needs:
      - natives-linux
      - natives-osx
      - natives-windows
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download linux-x64 Natives
        uses: actions/download-artifact@v4
        with:
          name: natives-linux-x64
          path: src/Raylib.NET.Native/bin/Release/native/linux-x64

      - name: Download osx-x64 Natives
        uses: actions/download-artifact@v4
        with:
          name: natives-osx-x64
          path: src/Raylib.NET.Native/bin/Release/native/osx-x64

      - name: Download win-x64 Natives
        uses: actions/download-artifact@v4
        with:
          name: natives-win-x64
          path: src/Raylib.NET.Native/bin/Release/native/win-x64

      - name: Create NuGet Packages
        run: dotnet pack -c Release --output nuget -p:SkipCompileNatives=true

      - name: Upload NuGet Packages As Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: nuget/*

      - name: Publish NuGet Packages to GitHub Packages
        run: dotnet nuget push nuget/*.nupkg -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -k ${{ secrets.GITHUB_TOKEN }}
