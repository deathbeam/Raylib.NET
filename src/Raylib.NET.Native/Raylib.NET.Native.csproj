<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <NoWarn>$(NoWarn);NU5128</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <IsPackable>true</IsPackable>
        <IncludeContentInPack>true</IncludeContentInPack>
        <IncludeBuildOutput>false</IncludeBuildOutput>

        <Title Condition="'$(Configuration)' == 'Debug'">Raylib.NET.Native.Debug</Title>
        <Title Condition="'$(Configuration)' == 'Release'">Raylib.NET.Native.Release</Title>
    </PropertyGroup>

    <PropertyGroup>
        <RaylibNativeIsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</RaylibNativeIsLinux>
        <RaylibNativeIsOsx Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</RaylibNativeIsOsx>
        <RaylibNativeIsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</RaylibNativeIsWindows>

        <RaylibNativeProcessorArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</RaylibNativeProcessorArch>

        <RaylibCompileOptions>$(RaylibCompileOptions)</RaylibCompileOptions>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Vezel.Zig.Toolsets.linux-x64" Version="0.13.0.1" Condition="'$(RaylibNativeProcessorArch)' == 'X64' And '$(RaylibNativeIsLinux)' == 'true'">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <PackageReference Include="Vezel.Zig.Toolsets.osx-x64" Version="0.13.0.1" Condition="'$(RaylibNativeProcessorArch)' == 'X64' And '$(RaylibNativeIsOsx)' == 'true'">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <PackageReference Include="Vezel.Zig.Toolsets.win-x64" Version="0.13.0.1" Condition="'$(RaylibNativeProcessorArch)' == 'X64' And '$(RaylibNativeIsWindows)' == 'true'">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <PackageReference Include="Vezel.Zig.Toolsets.linux-arm64" Version="0.13.0.1" Condition="'$(RaylibNativeProcessorArch)' == 'Arm64' And '$(RaylibNativeIsLinux)' == 'true'">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <PackageReference Include="Vezel.Zig.Toolsets.osx-arm64" Version="0.13.0.1" Condition="'$(RaylibNativeProcessorArch)' == 'Arm64' And '$(RaylibNativeIsOsx)' == 'true'">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <PackageReference Include="Vezel.Zig.Toolsets.win-arm64" Version="0.13.0.1" Condition="'$(RaylibNativeProcessorArch)' == 'Arm64' And '$(RaylibNativeIsWindows)' == 'true'">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <!--Build Files-->
        <Content Condition="'$(Configuration)' == 'Debug'" Include="buildTransitive/Raylib.NET.Native.props" PackagePath="buildTransitive/Raylib.NET.Native.Debug.props"/>
        <Content Condition="'$(Configuration)' == 'Debug'" Include="buildTransitive/Raylib.NET.Native.targets" PackagePath="buildTransitive/Raylib.NET.Native.Debug.targets"/>

        <Content Condition="'$(Configuration)' == 'Release'" Include="buildTransitive/Raylib.NET.Native.props" PackagePath="buildTransitive/Raylib.NET.Native.Release.props"/>
        <Content Condition="'$(Configuration)' == 'Release'" Include="buildTransitive/Raylib.NET.Native.targets" PackagePath="buildTransitive/Raylib.NET.Native.Release.targets"/>

        <!--Shared Libraries-->

        <!--X64-->
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/linux-x64/libraylib.so')" Include="debug/linux-x64/libraylib.so" PackagePath="runtimes/linux-x64/native/libraylib.so"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/osx-x64/libraylib.dylib')" Include="debug/osx-x64/libraylib.dylib" PackagePath="runtimes/osx-x64/native/libraylib.dylib"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/win-x64/raylib.dll')" Include="debug/win-x64/raylib.dll" PackagePath="runtimes/win-x64/native/raylib.dll"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/win-x64/raylib.pdb')" Include="debug/win-x64/raylib.pdb" PackagePath="runtimes/win-x64/native/raylib.pdb"/>

        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/linux-x64/libraylib.so')" Include="release/linux-x64/libraylib.so" PackagePath="runtimes/linux-x64/native/libraylib.so"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/osx-x64/libraylib.dylib')" Include="release/osx-x64/libraylib.dylib" PackagePath="runtimes/osx-x64/native/libraylib.dylib"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/win-x64/raylib.dll')" Include="release/win-x64/raylib.dll" PackagePath="runtimes/win-x64/native/raylib.dll"/>

        <!--Arm64-->
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/linux-arm64/libraylib.so')" Include="debug/linux-arm64/libraylib.so" PackagePath="runtimes/linux-arm64/native/libraylib.so"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/osx-arm64/libraylib.dylib')" Include="debug/osx-arm64/libraylib.dylib" PackagePath="runtimes/osx-arm64/native/libraylib.dylib"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/win-arm64/raylib.dll')" Include="debug/win-arm64/raylib.dll" PackagePath="runtimes/win-arm64/native/raylib.dll"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/win-arm64/raylib.pdb')" Include="debug/win-arm64/raylib.pdb" PackagePath="runtimes/win-arm64/native/raylib.pdb"/>

        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/linux-arm64/libraylib.so')" Include="release/linux-arm64/libraylib.so" PackagePath="runtimes/linux-arm64/native/libraylib.so"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/osx-arm64/libraylib.dylib')" Include="release/osx-arm64/libraylib.dylib" PackagePath="runtimes/osx-arm64/native/libraylib.dylib"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/win-arm64/raylib.dll')" Include="release/win-arm64/raylib.dll" PackagePath="runtimes/win-arm64/native/raylib.dll"/>

        <!--Static Libraries-->

        <!--X64-->
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/linux-x64/libraylib.a')" Include="debug/linux-x64/libraylib.a" PackagePath="static_libraries/linux-x64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/osx-x64/libraylib.a')" Include="debug/osx-x64/libraylib.a" PackagePath="static_libraries/osx-x64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/win-x64/raylib.lib')" Include="debug/win-x64/raylib.lib" PackagePath="static_libraries/win-x64/raylib.lib"/>

        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/linux-x64/libraylib.a')" Include="release/linux-x64/libraylib.a" PackagePath="static_libraries/linux-x64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/osx-x64/libraylib.a')" Include="release/osx-x64/libraylib.a" PackagePath="static_libraries/osx-x64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/win-x64/raylib.lib')" Include="release/win-x64/raylib.lib" PackagePath="static_libraries/win-x64/raylib.lib"/>

        <!--Arm64-->
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/linux-arm64/libraylib.a')" Include="debug/linux-arm64/libraylib.a" PackagePath="static_libraries/linux-arm64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/osx-arm64/libraylib.a')" Include="debug/osx-arm64/libraylib.a" PackagePath="static_libraries/osx-arm64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Debug' And Exists('debug/win-arm64/raylib.lib')" Include="debug/win-arm64/raylib.lib" PackagePath="static_libraries/win-arm64/raylib.lib"/>

        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/linux-arm64/libraylib.a')" Include="release/linux-arm64/libraylib.a" PackagePath="static_libraries/linux-arm64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/osx-arm64/libraylib.a')" Include="release/osx-arm64/libraylib.a" PackagePath="static_libraries/osx-arm64/libraylib.a"/>
        <Content Condition="'$(Configuration)' == 'Release' And Exists('release/win-arm64/raylib.lib')" Include="release/win-arm64/raylib.lib" PackagePath="static_libraries/win-arm64/raylib.lib"/>
    </ItemGroup>

    <Target Name="Compile Raylib" AfterTargets="build">
        <!--X64-->
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=Debug --prefix debug --prefix-lib-dir linux-x64        --prefix-exe-dir linux-x64        -Dtarget=x86_64-linux-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=Debug --prefix debug --prefix-lib-dir win-x64          --prefix-exe-dir win-x64          -Dtarget=x86_64-windows-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=Debug --prefix debug --prefix-lib-dir osx-x64          --prefix-exe-dir osx-x64          -Dtarget=x86_64-macos"/>

        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=ReleaseFast --prefix release --prefix-lib-dir linux-x64        --prefix-exe-dir linux-x64        -Dtarget=x86_64-linux-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=ReleaseFast --prefix release --prefix-lib-dir win-x64          --prefix-exe-dir win-x64          -Dtarget=x86_64-windows-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=ReleaseFast --prefix release --prefix-lib-dir osx-x64          --prefix-exe-dir osx-x64          -Dtarget=x86_64-macos"/>

        <!--Arm64-->
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=Debug --prefix debug --prefix-lib-dir linux-arm64        --prefix-exe-dir linux-arm64        -Dtarget=aarch64-linux-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=Debug --prefix debug --prefix-lib-dir win-arm64          --prefix-exe-dir win-arm64          -Dtarget=aarch64-windows-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=Debug --prefix debug --prefix-lib-dir osx-arm64          --prefix-exe-dir osx-arm64          -Dtarget=aarch64-macos"/>

        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=ReleaseFast --prefix release --prefix-lib-dir linux-arm64        --prefix-exe-dir linux-arm64        -Dtarget=aarch64-linux-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=ReleaseFast --prefix release --prefix-lib-dir win-arm64          --prefix-exe-dir win-arm64          -Dtarget=aarch64-windows-gnu"/>
        <Exec Command="$(ZigExePath) build $(RaylibCompileOptions) -Doptimize=ReleaseFast --prefix release --prefix-lib-dir osx-arm64          --prefix-exe-dir osx-arm64          -Dtarget=aarch64-macos"/>
    </Target>

</Project>
