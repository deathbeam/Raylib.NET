<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <NoWarn>$(NoWarn);CS2008</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <NativeArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</NativeArch>
    </PropertyGroup>

    <Choose>
        <When Condition="'$(Configuration)' == 'Debug'">
            <PropertyGroup>
                <PackageId>Raylib.NET.Native.Debug</PackageId>
                <ZigConfiguration>Debug</ZigConfiguration>
            </PropertyGroup>
        </When>
        <When Condition="'$(Configuration)' == 'Release'">
            <PropertyGroup>
                <PackageId>Raylib.NET.Native</PackageId>
                <ZigConfiguration>ReleaseFast</ZigConfiguration>
            </PropertyGroup>
        </When>
    </Choose>

    <Choose>
        <When Condition="$([MSBuild]::IsOSPlatform('Windows'))">
            <PropertyGroup>
                <NativeExt>dll</NativeExt>
                <NativePre>$(Configuration)/</NativePre>
                <NativeId Condition="'$(NativeArch)' == 'X64'">win-x64</NativeId>
                <NativeId Condition="'$(NativeArch)' == 'Arm64'">win-arm64</NativeId>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::IsOSPlatform('Linux'))">
            <PropertyGroup>
                <NativeExt>so</NativeExt>
                <NativePre>lib</NativePre>
                <NativeId Condition="'$(NativeArch)' == 'X64'">linux-x64</NativeId>
                <NativeId Condition="'$(NativeArch)' == 'Arm64'">linux-arm64</NativeId>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::IsOSPlatform('OSX'))">
            <PropertyGroup>
                <NativeExt>dylib</NativeExt>
                <NativePre>lib</NativePre>
                <NativeId Condition="'$(NativeArch)' == 'X64'">osx-x64</NativeId>
                <NativeId Condition="'$(NativeArch)' == 'Arm64'">osx-arm64</NativeId>
            </PropertyGroup>
        </When>
    </Choose>

    <PropertyGroup>
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == ''">$(NativeId)</RuntimeIdentifier>
    </PropertyGroup>

    <Choose>
        <When Condition="$(RuntimeIdentifier) == 'win-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'win-x86'">
            <PropertyGroup>
                <ZigIdentifier>x86-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'win-arm'">
            <PropertyGroup>
                <ZigIdentifier>arm-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'win-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-windows-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-linux-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-x86'">
            <PropertyGroup>
                <ZigIdentifier>x86-linux-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-arm'">
            <PropertyGroup>
                <ZigIdentifier>arm-linux-gnueabihf</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'linux-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-linux-gnu</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'osx-x64'">
            <PropertyGroup>
                <ZigIdentifier>x86_64-macos</ZigIdentifier>
            </PropertyGroup>
        </When>
        <When Condition="$(RuntimeIdentifier) == 'osx-arm64'">
            <PropertyGroup>
                <ZigIdentifier>aarch64-macos</ZigIdentifier>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <ZigIdentifier>$(RuntimeIdentifier)</ZigIdentifier>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <ItemGroup>
        <PackageReference Include="Vezel.Zig.Toolsets.$(NativeId)" Version="0.13.0.1">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <Content Include="$(OutputPath)runtimes/**/**" Link="%(Filename)%(Extension)">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <PackagePath>runtimes/</PackagePath>
        </Content>
    </ItemGroup>

    <Target Name="CompileNatives" BeforeTargets="Build" Condition="'$(SkipCompileNatives)' != 'true'">
        <Message Importance="High" Text="Build Target: $(RuntimeIdentifier) $(Configuration)"/>
        <Message Importance="High" Text="Build Zig Target: $(ZigIdentifier) $(ZigConfiguration)"/>
        <Exec Command="$(ZigExePath) build -Doptimize=$(ZigConfiguration) --prefix $(OutputPath)runtimes  --prefix-lib-dir $(RuntimeIdentifier)/native --prefix-exe-dir $(RuntimeIdentifier) -Dtarget=$(ZigIdentifier)"/>
    </Target>
</Project>
