<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

        <Title Condition="'$(Configuration)' == 'Debug'">Raylib.NET.Native.Debug</Title>
        <Title Condition="'$(Configuration)' == 'Release'">Raylib.NET.Native.Release</Title>
        <NoWarn>$(NoWarn);CS2008</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <NativeArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</NativeArch>
        <CompileOptions>$(RaylibCompileOptions)</CompileOptions>
        <NativeOptimize Condition="'$(Configuration)' == 'Debug'">Debug</NativeOptimize>
        <NativeOptimize Condition="'$(Configuration)' == 'Release'">ReleaseFast</NativeOptimize>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
        <NativeExt>so</NativeExt>
        <NativePre>lib</NativePre>
        <NativeId Condition="'$(NativeArch)' == 'X64'">linux-x64</NativeId>
        <NativeId Condition="'$(NativeArch)' == 'Arm64'">linux-arm64</NativeId>
        <NativeTarget Condition="'$(NativeArch)' == 'X64'">x86_64-linux-gnu</NativeTarget>
        <NativeTarget Condition="'$(NativeArch)' == 'Arm64'">aarch64-linux-gnu</NativeTarget>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
        <NativeExt>dylib</NativeExt>
        <NativePre>lib</NativePre>
        <NativeId Condition="'$(NativeArch)' == 'X64'">osx-x64</NativeId>
        <NativeId Condition="'$(NativeArch)' == 'Arm64'">osx-arm64</NativeId>
        <NativeTarget Condition="'$(NativeArch)' == 'X64'">x86_64-macos</NativeTarget>
        <NativeTarget Condition="'$(NativeArch)' == 'Arm64'">aarch64-macos</NativeTarget>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
        <NativeExt>dll</NativeExt>
        <NativePre>$(Configuration)/</NativePre>
        <NativeId Condition="'$(NativeArch)' == 'X64'">win-x64</NativeId>
        <NativeId Condition="'$(NativeArch)' == 'Arm64'">win-arm64</NativeId>
        <NativeTarget Condition="'$(NativeArch)' == 'X64'">x86_64-windows-gnu</NativeTarget>
        <NativeTarget Condition="'$(NativeArch)' == 'Arm64'">aarch64-windows-gnu</NativeTarget>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Vezel.Zig.Toolsets.$(NativeId)" Version="0.13.0.1">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <Target Name="CompileNatives" AfterTargets="build">
        <Exec Command="$(ZigExePath) build $(CompileOptions) -Doptimize=$(NativeOptimize) --prefix $(OutputPath)native  --prefix-lib-dir $(NativeId) --prefix-exe-dir $(NativeId) -Dtarget=$(NativeTarget)"/>
    </Target>

    <ItemGroup>
        <Content
          Include="$(OutputPath)native/$(NativeId)/$(NativePre)raylib.$(NativeExt)"
          Link="%(Filename)%(Extension)"
          CopyToOutputDirectory="PreserveNewest"
          Condition="Exists('$(OutputPath)native/$(NativeId)/$(NativePre)raylib.$(NativeExt)')" />
    </ItemGroup>
</Project>
