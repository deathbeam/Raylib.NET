// This file was generated by Bindgen, do not edit it manually.
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Bindgen.Interop;
using System.Numerics;

namespace RaylibNET;

public static unsafe partial class Rres
{
    public const string LIBRARY = "raylib";

    public const int RRES_MAX_FILENAME_SIZE = 1024;

    /// <summary>
    /// Load one resource chunk for provided id
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresLoadResourceChunk", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial ResourceChunk LoadResourceChunk(string fileName, int Id);

    /// <summary>
    /// Unload resource chunk from memory
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresUnloadResourceChunk", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void UnloadResourceChunk(ResourceChunk chunk);

    /// <summary>
    /// Load resource for provided id (multiple resource chunks)
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresLoadResourceMulti", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial ResourceMulti LoadResourceMulti(string fileName, int Id);

    /// <summary>
    /// Unload resource from memory (multiple resource chunks)
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresUnloadResourceMulti", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void UnloadResourceMulti(ResourceMulti multi);

    /// <summary>
    /// Load resource chunk info for provided id
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresLoadResourceChunkInfo", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial ResourceChunkInfo LoadResourceChunkInfo(string fileName, int Id);

    /// <summary>
    /// Load all resource chunks info
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresLoadResourceChunkInfoAll", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static unsafe partial ResourceChunkInfo* LoadResourceChunkInfoAll(string fileName, ref uint chunkCount);

    /// <summary>
    /// Load central directory resource chunk from file
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresLoadCentralDirectory", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial CentralDir LoadCentralDirectory(string fileName);

    /// <summary>
    /// Unload central directory resource chunk
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresUnloadCentralDirectory", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void UnloadCentralDirectory(CentralDir dir);

    /// <summary>
    /// Get rresResourceDataType from FourCC code
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresGetDataType", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static unsafe partial uint GetDataType(byte* fourCC);

    /// <summary>
    /// Get resource id for a provided filename
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresGetResourceId", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial int GetResourceId(CentralDir dir, string fileName);

    /// <summary>
    /// Compute CRC32 for provided data
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresComputeCRC32", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static unsafe partial uint ComputeCRC32(byte* data, int len);

    /// <summary>
    /// Set password to be used on data decryption
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresSetCipherPassword", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void SetCipherPassword(string pass);

    /// <summary>
    /// Get password to be used on data decryption
    /// </summary>
    [LibraryImport(LIBRARY, EntryPoint = "rresGetCipherPassword", StringMarshalling = StringMarshalling.Utf8)]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial string GetCipherPassword();
}
